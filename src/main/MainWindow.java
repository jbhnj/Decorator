/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.DefaultListModel;

import thread.ThreadA;

public class MainWindow extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    public void addComponent (String[] lista) {
    	
    	for (int i = 0; i < lista.length; i++) {
    		modelAvailable.addElement(lista[i].split("Decorator")[0]);
    		
    	}
    }
    public void setThread (ThreadA thread) {
    	this.thread = thread;
    	
    }
    
    public ArrayList <String> getSequencia(){
    	
    	return sequencia;
    }
    
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableDecorators = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedDecorators = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        insertButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        upButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        modelAvailable = new DefaultListModel<String>();
        modelSelected = new DefaultListModel<String>();
        sequencia = new ArrayList<String>();
        	
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout());

        availableDecorators.setModel(modelAvailable);
        selectedDecorators.setModel(modelSelected);

        jScrollPane1.setViewportView(availableDecorators);
        
        jScrollPane2.setViewportView(selectedDecorators);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        insertButton.setText(">");
        jPanel1.add(insertButton);
        insertButton.addActionListener(this);

        removeButton.setText("<");
        jPanel1.add(removeButton);
        removeButton.addActionListener(this);

        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        upButton.setText("Up");
        jPanel2.add(upButton);
        upButton.addActionListener(this);

        downButton.setText("Down");
        jPanel2.add(downButton);
        downButton.addActionListener(this);

        jButton1.setText("Ok");
        jButton1.addActionListener(this);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    /** public static void main(String args[]) {
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> availableDecorators;
    private javax.swing.JButton downButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeButton;
    private javax.swing.JList<String> selectedDecorators;
    private javax.swing.JButton upButton;
    private DefaultListModel<String> modelAvailable;
    private DefaultListModel<String> modelSelected;
    private ArrayList<String> sequencia;
    private ThreadA thread;
    // End of variables declaration//GEN-END:variables
	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource() == insertButton) {
			if (availableDecorators.getSelectedValue() != null)
				modelSelected.addElement(availableDecorators.getSelectedValue());
		}
		if (e.getSource() == removeButton) {
			if (selectedDecorators.getSelectedValue() != null)
				modelSelected.removeElement(selectedDecorators.getSelectedValue());
		}
		if (e.getSource() == upButton) {
			if (selectedDecorators.getSelectedValue() != null && selectedDecorators.getSelectedIndex() > 0) {
				int index = selectedDecorators.getSelectedIndex() - 1;
                modelSelected.insertElementAt(selectedDecorators.getSelectedValue(), 
                        index);
                modelSelected.removeElementAt(selectedDecorators.getSelectedIndex());
                selectedDecorators.setSelectedIndex(index);
			}
				
		}
		
		if (e.getSource() == downButton) {
			if (selectedDecorators.getSelectedValue() != null && selectedDecorators.getSelectedIndex() < modelSelected.size() -1) {
				int index = selectedDecorators.getSelectedIndex() + 1;
				String elemento = selectedDecorators.getSelectedValue();
				modelSelected.removeElementAt(selectedDecorators.getSelectedIndex());
				modelSelected.insertElementAt(elemento,index);
				selectedDecorators.setSelectedIndex(index);
			}
			
			}
		if (e.getSource() == jButton1) {
			for (int i = 0; i < modelSelected.size(); i++) {
				sequencia.add(modelSelected.get(i));
			}
			thread.release();
		}
	}
}
